# Задание-1:
# Напишите функцию, возвращающую ряд Фибоначчи с n-элемента до m-элемента.
# Первыми элементами ряда считать цифры 1 1

def fibonacci(n, m):
    fib = [1, 1]
    g = 0
    h = 0
    k = 1
    while g <= m:
    	fib.append(fib[h] + fib[k])
    	h += 1
    	k += 1
    	g += 1
    #Пишу n - 1, так как пользователь считает элементы от 1, а не от 0, как в питоне
    return fib[n - 1:m]

print(fibonacci(3, 14))

# Задача-2:
# Напишите функцию, сортирующую принимаемый список по возрастанию.
# Для сортировки используйте любой алгоритм (например пузырьковый).
# Для решения данной задачи нельзя использовать встроенную функцию и метод sort()


def sort_to_max(origin_list):
	#Создаю пустой список, в который буду добовлять символы по порядку
	itog_list = []
	while len(origin_list) > 0:
		c = 9999999999999999
		#Нахожу самое маленькое значение в списке
		for i in origin_list:
			if i < c:
				c = i
		#Добавляю его в другой список
		itog_list.append(c)
		#Удаляю его из первоначального списка
		origin_list.remove(c)
	return itog_list

print(sort_to_max([2, 10, -12, 2.5, 20, -11, 4, 4, 0]))

# Задача-3:
# Напишите собственную реализацию стандартной функции filter.
# Разумеется, внутри нельзя использовать саму функцию filter.

def filterx(a, b):
	c = []
	for i in b:
		if i == a:
			c.append(i)
	return c
print(filterx("мак", ['мак', 'просо', 'мак', 'мак', 'просо', 'мак', 'просо', 'просо', 'просо', 'мак']))

# Задача-4:
# Даны четыре точки А1(х1, у1), А2(x2 ,у2), А3(x3 , у3), А4(х4, у4).
# Определить, будут ли они вершинами параллелограмма.

def par(a1, a2, a3, a4):
	#Проверил, являются ли переменные координатоми(на 1 переменную 2 координаты - х и у)
	if len(a1) == 2 and len(a2) == 2 and len(a3) == 2 and len(a4) == 2:
		#Проверил существование 2х параллельных прямых
		if a1[1] == a2[1]:
			a = a1
			b = a2
			c = a3
			g = a4
		elif a1[1] == a3[1]:
			a = a1
			b = a3
			c = a2
			g = a4
		elif a1[1] == a4[1]:
			a = a1
			b = a4
			c = a2
			g = a3
		else:
			return "Точки не являются вершинами параллелограмма"
		if c[1] != g[1]:
			return "Точки не являются вершинами параллелограмма"
		#Проверил, смежные ли углы лежат на каждой прямой(свойство параллелограмма)
		if a[0] - c[0] == b[0] - g[0] or a[0] - g[0] == b[0] - c[0]:
			return "Точки являются вершинами параллелограмма"
	else:
		return "Неверный ввод данных"

#Ввел точки, которые являются вершинами параллелограмма
A1 = [-2, 3]
A2 = [3, 3]
A3 = [-1, -1]
A4 = [4, -1]
print(par(A1, A2, A3, A4))


